"
"Vim Plugin
call plug#begin('~/.vim/pluged')
Plug 'morhetz/gruvbox'
Plug 'preservim/nerdtree'
Plug 'vim-airline/vim-airline'
Plug 'mhinz/vim-startify'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'tpope/vim-fugitive'
Plug 'bronson/vim-trailing-whitespace'
Plug 'dense-analysis/ale'
Plug 'preservim/tagbar'
Plug 'vim-autoformat/vim-autoformat'
Plug 'davidhalter/jedi-vim'
call plug#end()


"Theme
syntax on
set background=dark
colorscheme gruvbox
"colorscheme darkblue

"Map
let mapleader = "\<space>"
let maplocalleader="_"
nnoremap <TAB> :tabnext<CR>
nnoremap <leader>e :NERDTreeToggle<CR>
nnoremap <leader>ef :NERDTreeFind<CR>
nnoremap <F1> :b#<cr>
" Press <c-f> and <c-b> to cycle between modes.
let g:ctrlp_map = '<leader><leader>'
let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']

"Set
let g:C_Ctrl_j = 'off'
let g:C_Ctrl_k = 'off'
filetype plugin indent on
set autoindent
set tabstop=2
set softtabstop=2
set shiftwidth=2
set tabstop=2
set noexpandtab
set clipboard=unnamedplus
set clipboard=unnamed
set number
set relativenumber
set exrc
set secure
set backupdir=~/.vimbackup
set directory=/tmp
set undofile
set history=1000
set ttimeout ttimeoutlen=10





"automcd
autocmd BufNewFile,BufRead *.txt set filetype=txt
autocmd FileType txt set dictionary=~/.vim/dict/sl_dict.txt
set cpt=.,k,w,b
set completeopt=menu,menuone,noselect
set shortmess+=c
function! InserTabWrapper()
	let col=col('.')-1
	if !col || getline('.')[col-1] !~ '\k'
		return "\<TAB>"
	else
		return "\<C-N>"
	endif
endfunction
inoremap <TAB> <C-R>=InserTabWrapper()<CR>

"autoformat
"自动格式化python代码
au BufWrite *.py :Autoformat


"自动补全括号
inoremap ( ()<ESC>i
inoremap [ []<ESC>i
inoremap { {}<ESC>i
inoremap < <><ESC>i
inoremap " ""<ESC>i
inoremap ' ''<ESC>i

"jedi-vim
"let g:jedi#auto_initialization = 0
"let g:jedi#environment_path = "/usr/local/Caskroom/miniforge/base/bin/python3"

"let g:jedi#auto_vim_configuration = 0
"let g:jedi#environment_path = "base"
